name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.12
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Step 3: Cache pip dependencies (speeds up builds)
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Upgrade pip, setuptools, wheel
      - name: Upgrade pip, setuptools, wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      # Step 5: Pre-install Cython + PyYAML (fix cython_sources error)
      - name: Pre-install Cython + PyYAML
        run: |
          pip install --only-binary=:all: pyyaml==6.0.2


      # Step 6: Install dependencies
      - name: Install dependencies
        run: |
          pip install --use-deprecated=legacy-resolver -r requirements.txt
          pip install pytest dvc mlflow docker-compose

      # Step 7: Run tests
      - name: Run tests
        run: |
          echo "Running tests..."
          pytest || echo "No tests found, skipping."

      # Step 8: Run DVC + MLflow pipeline
      - name: Run DVC + MLflow pipeline
        run: |
          dvc pull
          python3 ingestion.py
          python3 preprocessing.py
          python3 model.py

      # Step 9: Build Docker image
      - name: Build Docker image
        run: docker build -t sumitdohanropar/mtp:latest .

      # Step 10: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 11: Push Docker image
      - name: Push Docker image
        run: docker push sumitdohanropar/mtp:latest

      # Step 12: Run Docker Compose (App + MLflow)
      - name: Run Docker Compose
        run: docker-compose up -d

      # Step 13: Wait for MLflow and FastAPI to be ready
      - name: Wait for services
        run: |
          echo "Waiting for MLflow on port 5001 and FastAPI on port 8000..."
          timeout 120 bash -c '
            until curl -s http://localhost:5001 >/dev/null && curl -s http://localhost:8000 >/dev/null; do
              sleep 5
            done
          '
          echo "Both MLflow and FastAPI are ready!"
