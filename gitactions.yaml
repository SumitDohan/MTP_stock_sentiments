name: CI/CD - Build & Deploy to K8s

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Docker image
        id: image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/finbert-mlops:latest
          # optionally also tag with the commit sha:
          tags: |
            ghcr.io/${{ github.repository_owner }}/finbert-mlops:latest
            ghcr.io/${{ github.repository_owner }}/finbert-mlops:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (needed if you apply manifests from repo)
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
      - name: Update image in deployment (kubectl set image)
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/finbert-mlops:latest
          kubectl -n default set image deployment/finbert-mlops finbert-mlops=$IMAGE --record
          kubectl -n default rollout status deployment/finbert-mlops --timeout=2m
      - name: Apply service (ensure exists)
        run: |
          kubectl apply -f k8s/service.yaml
